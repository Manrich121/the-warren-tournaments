// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id           String   @id @default(cuid())
  fullName     String
  wizardsEmail String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  events       Event[]  @relation("EventParticipants")
  matchesAsPlayer1 Match[] @relation("Player1")
  matchesAsPlayer2 Match[] @relation("Player2")
}

model Match {
  id           String   @id @default(cuid())
  event        Event    @relation(fields: [eventId], references: [id])
  eventId      String
  player1      Player   @relation("Player1", fields: [player1Id], references: [id])
  player1Id    String
  player2      Player   @relation("Player2", fields: [player2Id], references: [id])
  player2Id    String
  player1Score Int
  player2Score Int
  round        Int
  draw         Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Event {
  id           String   @id @default(cuid())
  league       League   @relation(fields: [leagueId], references: [id])
  leagueId     String
  name         String
  date         DateTime
  participants Player[] @relation("EventParticipants")
  matches      Match[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model League {
  id        String    @id @default(cuid())
  name      String
  startDate DateTime
  endDate   DateTime
  events    Event[]
  prizePool PrizePool[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PrizePool {
  id        String   @id @default(cuid())
  league    League   @relation(fields: [leagueId], references: [id])
  leagueId  String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
