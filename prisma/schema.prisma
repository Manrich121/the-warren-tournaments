generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id               String   @id @default(cuid())
  name             String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  matchesAsPlayer1 Match[]  @relation("Player1")
  matchesAsPlayer2 Match[]  @relation("Player2")
  events           Event[]  @relation("EventParticipants")
}

model Match {
  id           String   @id @default(cuid())
  eventId      String
  player1Id    String
  player2Id    String
  player1Score Int
  player2Score Int
  round        Int
  draw         Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  event        Event    @relation(fields: [eventId], references: [id])
  player1      Player   @relation("Player1", fields: [player1Id], references: [id])
  player2      Player   @relation("Player2", fields: [player2Id], references: [id])
}

model Event {
  id           String   @id @default(cuid())
  leagueId     String
  name         String
  date         DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  league       League   @relation(fields: [leagueId], references: [id])
  matches      Match[]
  participants Player[] @relation("EventParticipants")
}

model League {
  id        String      @id @default(cuid())
  name      String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  events    Event[]
  prizePool PrizePool[]
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PrizePool {
  id        String   @id @default(cuid())
  leagueId  String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  league    League   @relation(fields: [leagueId], references: [id])
}
